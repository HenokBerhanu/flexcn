/**
 * FlexCN Northbound API
 * This API allows xApps to communicate with FlexCN.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "Event.h"
#include "Helpers.h"

#include <sstream>

namespace oai {
namespace flexcn_server {
namespace model {

Event::Event() {
  m_Ueid       = "";
  m_UeidIsSet  = false;
  m_Event      = "";
  m_EventIsSet = false;
}

void Event::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::flexcn_server::helpers::ValidationException(msg.str());
  }
}

bool Event::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool Event::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success                  = true;
  const std::string _pathPrefix = pathPrefix.empty() ? "Event" : pathPrefix;

  if (eventIsSet()) {
    const std::string& value           = m_Event;
    const std::string currentValuePath = _pathPrefix + ".event";

    if (value.length() > 256) {
      success = false;
      msg << currentValuePath << ": must be at most 256 characters long;";
    }
  }

  return success;
}

bool Event::operator==(const Event& rhs) const {
  return

      ((!ueidIsSet() && !rhs.ueidIsSet()) ||
       (ueidIsSet() && rhs.ueidIsSet() && getUeid() == rhs.getUeid())) &&

      ((!eventIsSet() && !rhs.eventIsSet()) ||
       (eventIsSet() && rhs.eventIsSet() && getEvent() == rhs.getEvent()))

          ;
}

bool Event::operator!=(const Event& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Event& o) {
  j = nlohmann::json();
  if (o.ueidIsSet()) j["ueid"] = o.m_Ueid;
  if (o.eventIsSet()) j["event"] = o.m_Event;
}

void from_json(const nlohmann::json& j, Event& o) {
  if (j.find("ueid") != j.end()) {
    j.at("ueid").get_to(o.m_Ueid);
    o.m_UeidIsSet = true;
  }
  if (j.find("event") != j.end()) {
    j.at("event").get_to(o.m_Event);
    o.m_EventIsSet = true;
  }
}

std::string Event::getUeid() const {
  return m_Ueid;
}
void Event::setUeid(std::string const& value) {
  m_Ueid      = value;
  m_UeidIsSet = true;
}
bool Event::ueidIsSet() const {
  return m_UeidIsSet;
}
void Event::unsetUeid() {
  m_UeidIsSet = false;
}
std::string Event::getEvent() const {
  return m_Event;
}
void Event::setEvent(std::string const& value) {
  m_Event      = value;
  m_EventIsSet = true;
}
bool Event::eventIsSet() const {
  return m_EventIsSet;
}
void Event::unsetEvent() {
  m_EventIsSet = false;
}

}  // namespace model
}  // namespace flexcn_server
}  // namespace oai
