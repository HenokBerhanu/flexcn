/**
* FlexCN Northbound API
* This API allows xApps to communicate with FlexCN. 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SessionProfile.h
 *
 * 
 */

#ifndef SessionProfile_H_
#define SessionProfile_H_


#include <string>
#include "Snssai.h"
#include <vector>
#include "FlowProfile.h"
#include <nlohmann/json.hpp>
#include "PlmnId.h"

using namespace oai::flexcn_server::model;

namespace flexcn
{

/// <summary>
/// 
/// </summary>
class  SessionProfile
{
public:
    SessionProfile();
    virtual ~SessionProfile() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    bool operator==(const SessionProfile& rhs) const;
    bool operator!=(const SessionProfile& rhs) const;

    /////////////////////////////////////////////
    /// SessionProfile members

    /// <summary>
    /// 
    /// </summary>
    std::string getSupi() const;
    void setSupi(std::string const& value);
    bool supiIsSet() const;
    void unsetSupi();
    /// <summary>
    /// 
    /// </summary>
    std::string getDnn() const;
    void setDnn(std::string const& value);
    bool dnnIsSet() const;
    void unsetDnn();
    /// <summary>
    /// 
    /// </summary>
    std::string getAmfAddr() const;
    void setAmfAddr(std::string const& value);
    bool amfAddrIsSet() const;
    void unsetAmf_addr();
    /// <summary>
    /// 
    /// </summary>
    std::string getPduSessionType() const;
    void setPduSessionType(std::string const& value);
    bool pduSessionTypeIsSet() const;
    void unsetPdu_session_type();
    /// <summary>
    /// 
    /// </summary>
    PlmnId getPlmnId() const;
    void setPlmnId(PlmnId const value);
    bool plmnIdIsSet() const;
    void unsetPlmnId();
    /// <summary>
    /// 
    /// </summary>
    int32_t getPduSeId() const;
    void setPduSeId(int32_t const value);
    bool pduSeIdIsSet() const;
    void unsetPduSeId();
    /// <summary>
    /// 
    /// </summary>
    std::string getAdIpv4Addr() const;
    void setAdIpv4Addr(std::string const& value);
    bool adIpv4AddrIsSet() const;
    void unsetAdIpv4Addr();
    /// <summary>
    /// 
    /// </summary>
    Snssai getSnssai() const;
    void setSnssai(Snssai const& value);
    bool snssaiIsSet() const;
    void unsetSnssai();
    /// <summary>
    /// 
    /// </summary>
    std::vector<FlowProfile> getFlows() const;
    void setFlows(std::vector<FlowProfile> const& value);
    bool flowsIsSet() const;
    void unsetFlows();

    bool is_all_setted();

    std::string getUeIpv4Addr() const;
    void setUeIpv4Addr(std::string const& value);
    bool ueIpv4AddrIsSet() const;
    void unsetUeIpv4Addr();

    friend void to_json(nlohmann::json& j, const SessionProfile& o);
    friend void from_json(const nlohmann::json& j, SessionProfile& o);


protected:
    std::string m_Supi;
    bool m_SupiIsSet;
    std::string m_Dnn;
    bool m_DnnIsSet;
    std::string m_Amf_addr;
    bool m_Amf_addrIsSet;
    std::string m_Pdu_session_type;
    bool m_Pdu_session_typeIsSet;
    PlmnId m_PlmnId;
    bool m_PlmnIdIsSet;
    int32_t m_PduSeId;
    bool m_PduSeIdIsSet;
    std::string m_AdIpv4Addr;
    bool m_AdIpv4AddrIsSet;
    Snssai m_Snssai;
    bool m_SnssaiIsSet;
    std::vector<FlowProfile> m_Flows;
    bool m_FlowsIsSet;
    std::string m_UeIpv4Addr;
    bool m_UeIpv4AddrIsSet;


    // Helper overload for validate. Used when one model stores another model and calls it's validate.
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

};

} // namespace org::openapitools::server::model

#endif /* SessionProfile_H_ */
