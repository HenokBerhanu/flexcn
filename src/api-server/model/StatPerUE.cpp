/**
* FlexCN Northbound API
* This API allows xApps to communicate with FlexCN. 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "StatPerUE.h"
#include "Helpers.h"

#include <sstream>

namespace oai {
namespace flexcn_server {
namespace model {

StatPerUE::StatPerUE()
{
    m_Id = "";
    m_IdIsSet = false;
    m_EventIsSet = false;
    
}

void StatPerUE::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw oai::flexcn_server::helpers::ValidationException(msg.str());
    }
}

bool StatPerUE::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool StatPerUE::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "StatPerUE" : pathPrefix;

        
    

    return success;
}

bool StatPerUE::operator==(const StatPerUE& rhs) const
{
    return
    
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!eventIsSet() && !rhs.eventIsSet()) || (eventIsSet() && rhs.eventIsSet() && getEvent() == rhs.getEvent()))
    
    ;
}

bool StatPerUE::operator!=(const StatPerUE& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const StatPerUE& o)
{
    j = nlohmann::json();
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.eventIsSet())
        j["event"] = o.m_Event;
    
}

void from_json(const nlohmann::json& j, StatPerUE& o)
{
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("event") != j.end())
    {
        j.at("event").get_to(o.m_Event);
        o.m_EventIsSet = true;
    } 
    
}

std::string StatPerUE::getId() const
{
    return m_Id;
}
void StatPerUE::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool StatPerUE::idIsSet() const
{
    return m_IdIsSet;
}
void StatPerUE::unsetId()
{
    m_IdIsSet = false;
}
Event StatPerUE::getEvent() const
{
    return m_Event;
}
void StatPerUE::setEvent(Event const& value)
{
    m_Event = value;
    m_EventIsSet = true;
}
bool StatPerUE::eventIsSet() const
{
    return m_EventIsSet;
}
void StatPerUE::unsetEvent()
{
    m_EventIsSet = false;
}


}  // namespace model
}  // namespace flexcn_server
}  // namespace oai
